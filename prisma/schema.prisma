// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model GoodType {
  name                   String
  symbol                 String                           @id
  volumePerUnit          Int
  cargoHolds             Cargo[]
  marketplaceEntries     MarkplaceEntry[]
  producingStructureType StructureTypeProducingGoodType[]
  consumingStructureType StructureTypeConsumingGoodType[]
  restrictedShipTypes    RestrictedGoodsOnShipType[]
}

model LoanType {
  type               String  @id
  amount             Int
  collateralRequired Boolean
  rate               Int
  termInDays         Int
  Loan               Loan[]
}

model LocationType {
  type                  String          @id
  allowedStructureTypes StructureType[]
}

model StructureType {
  type                 String                           @id
  name                 String
  price                Int
  allowedLocationTypes LocationType[]
  producesGood         StructureTypeProducingGoodType[]
  consumesGood         StructureTypeConsumingGoodType[]
}

// model LocationTypeAllowedStructureType {
//   locationType      LocationType  @relation(fields: [locationTypeType], references: [type])
//   locationTypeType  String
//   structureType     StructureType @relation(fields: [structureTypeType], references: [type])
//   structureTypeType String

//   @@id([locationTypeType, structureTypeType])
// }

model StructureTypeProducingGoodType {
  goodType          GoodType      @relation(fields: [goodTypeSymbol], references: [symbol])
  goodTypeSymbol    String
  structureType     StructureType @relation(fields: [structureTypeType], references: [type])
  structureTypeType String

  @@id([goodTypeSymbol, structureTypeType])
}

model StructureTypeConsumingGoodType {
  goodType          GoodType      @relation(fields: [goodTypeSymbol], references: [symbol])
  goodTypeSymbol    String
  structureType     StructureType @relation(fields: [structureTypeType], references: [type])
  structureTypeType String

  @@id([goodTypeSymbol, structureTypeType])
}

model ShipType {
  class           String
  manufacturer    String
  maxCargo        Int
  plating         Int
  speed           Int
  type            String                      @id
  weapons         Int
  restrictedGoods RestrictedGoodsOnShipType[]
}

model RestrictedGoodsOnShipType {
  good         GoodType @relation(fields: [goodSymbol], references: [symbol])
  goodSymbol   String
  shipType     ShipType @relation(fields: [shipTypeType], references: [type])
  shipTypeType String

  @@id([goodSymbol, shipTypeType])
}

model Ship {
  id                String    @id
  class             String
  location          Location? @relation("Location", fields: [locationSymbol], references: [symbol])
  locationSymbol    String?
  manufacturer      String
  type              String
  spaceAvailable    Int
  destination       Location? @relation("Destination", fields: [destinationSymbol], references: [symbol])
  destinationSymbol String?
  arrivalTime       DateTime?
  cargo             Cargo[]
  x                 Int
  y                 Int
}

model Cargo {
  good       GoodType @relation(fields: [goodSymbol], references: [symbol])
  goodSymbol String
  ship       Ship     @relation(fields: [shipId], references: [id])
  shipId     String
  quantity   Int

  @@id([goodSymbol, shipId])
}

model System {
  symbol    String     @unique
  name      String
  locations Location[]
}

model Location {
  symbol             String           @id
  ships              Ship[]           @relation("Location")
  incomingShips      Ship[]           @relation("Destination")
  system             System           @relation(fields: [systemSymbol], references: [symbol])
  systemSymbol       String
  type               String
  name               String
  x                  Int
  y                  Int
  allowsConstruction Boolean
  marketplace        MarkplaceEntry[]
}

model MarkplaceEntry {
  location          Location @relation(fields: [locationSymbol], references: [symbol])
  locationSymbol    String
  good              GoodType @relation(fields: [goodSymbol], references: [symbol])
  goodSymbol        String
  quantityAvailable Int
  pricePerUnit      Int
  spread            Int
  sellPricePerUnit  Int

  @@id([locationSymbol, goodSymbol])
}

model Loan {
  id              String   @id
  due             DateTime
  repaymentAmount Int
  status          String
  type            LoanType @relation(fields: [loanTypeType], references: [type])
  account         Account? @relation(fields: [accountUsername], references: [username])
  accountUsername String?
  loanTypeType    String
}

model Account {
  username String @id
  credits  Int
  loans    Loan[]
}
